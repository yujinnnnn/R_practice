library(hflights)
library(dplyr)
filter(hflights,Month==1, Dayofweek==1)
filter(hflights,Month==1, DayOfweek==1)
filter(hflights, Month==1, DayOfWeek==1)
aa <-arrange(hflights, DatOfWeek,Month, Year)
head(aa)
aa <-arrange(hflights, DatOfWeek,Month, Year)
aa <-arrange(hflights, DayOfWeek,Month, Year)
head(aa)
tail(aa,10)
filter(hflights, Month==1, DayofWeek==1)
filter(hflights, Month==1, DayOfWeek==1)
aa <-arrange(hflights, DayOfWeek,Month, Year)
tail(aa,10)
bb<- arrange(hflights,desc(Arrdelay))
bb<- arrange(hflights,desc(ArrDelay))
head(bb,10)
aa <-arrange(hflights, DayofWeek,Month, Year)
aa <-arrange(hflights, DayOfWeek,Month, Year)
select(hflights, Year, Month, DayOfWeek)
cc<-select(hflights, Year, Month, DayOfWeek)
head(cc)
data(budget12)
data("budget12")
rm(list=ls())
budget2012 <-read.csv("budget2012.csv", header = T)
par(mfrow=c(1,1))
par(mar=c(1,1,1,1))
pie(budget2012$budget,col = rainbow(12), labels = budget2012$name,
radius=1, main = "budget 2012", clockwise = T, init.angle = 90)
View(budget2012)
pie(budget2012$budget,col = rainbow(12), labels = budget2012$name,
radius=1, main = "budget 2012", clockwise = T, init.angle = 90)
windows(height = 6, width = 5.5)
pie(budget2012$budget,col = rainbow(12), labels = budget2012$name,
radius=1, main = "budget 2012", clockwise = T, init.angle = 90)
par(new=T)
pie(budget2012$budget, radius = 0.8, col="white",
labes = NA, border=NA)
warnings()
source('~/MyR/07_06_01.R', echo=TRUE)
savePlot("piechart.png", type="png")
savePlot("piechart.png", type="png")
par(new=T)
windows(height = 6, width = 5.5)
pie(budget2012$budget, radius = 0.8, col="white",
labels = NA, border=NA)
windows(height = 6, width = 5.5)
par(mfrow=c(1,1))
par(mar=c(1,1,1,1))
par(new=T)
pie(budget2012$budget, radius = 0.8, col="white",
labels = NA, border=NA)
rm(list=ls())
budget2012 <-read.csv("budget2012.csv", header = T)
windows(height = 6, width = 5.5)
par(mfrow=c(1,1))
par(mar=c(1,1,1,1))
par(new=T)
pie(budget2012$budget, radius = 0.8, col="white",
labels = NA, border=NA)
pie(budget2012$budget,col = rainbow(12), labels = budget2012$name,
radius=1, main = "budget 2012", clockwise = T, init.angle = 90)
par(new=T)
pie(budget2012$budget, radius = 0.8, col="white",
labels = NA, border=NA)
savePlot("piechart.png", type="png")
#bar plot
data(VADeaths)
force(VADeaths)
windows(height = 4, width = 8)
par(mfrow=c(1,2))
colnames(VADeaths) <- c("rM","rF","uM","uF")
barplot(round(VADeaths[1,]), col=2:5, border = "white",ylim=c(0,25),
main = "VADeath (50-54)")
의 높이
#col 변수
#border 외각선 색깔
#ylim y축 범위위
View(VADeaths)
barplot(round(VADeaths[1,]),
col=c("green", "darkgreen","blue","blue4"),
border="white", ylim=c(0,25),
main = "VADeath (50-54)")
abline(h=1:25, col="white", lwd=2)
#abline 눈금선 만드는 함수
#lwd 선 굵기
savePlot("barplot.png", type="png")
#histogram****************************************************
library(MASS)
data(geyser)
View(geyser)
windows(height=4, width = 9); par(mfrow=c(1,2))
hist(geyser$waiting, nclass = 20, main = "geyser",
xlab = "waiting", xlim = c(40,120), ylim = c(0,80))
hist(geyser$duration, nclass = 16, main = "geyser",
xlab = "duration", xlim = c(0,8), ylim = c(0,80))
hist(geyser$waiting, breaks = seq(40,120,by=10), main = "geyser",
xlab = "waiting",freq = T)
hist(geyser$waiting, breaks = seq(40,120,by=10), main = "geyser",
xlab = "waiting",probability = T)
windows(height=4, width = 9); par(mfrow=c(1,1))
hist(geyser$waiting, breaks = seq(40,120,by=10), main = "geyser",
xlab = "waiting",probability = T)
lines(density(geyser$waiting))
#box plot*****************************************************
rm(list = ls())
electorate <- read.csv("국회의원 선거구 유권자 수.csv", header=T)
View(electorate)
attach(electorate)
windows(height = 6, width=5)
boxplot(선거인. 수, col="yellow", ylim=c(0,250000),
xlab="전국", ylab="선거인수")
boxplot(선거인.수, col="yellow", ylim=c(0,250000),
xlab="전국", ylab="선거인수")
windows(height = 6, width=10)
boxplot(선거인.수~시도, col=heat.colors(16), ylim=c(0,250000),
main="우리나라 18대 국회의원 선거구의 선거인 수 분포", ylab="선거인수")
savePlot("boxplot.png", type="png")
#scatter plot**************************************************
rm(list=ls())
library(MASS)
library(KernSmooth)
install.packages("KernSmooth")
install.packages("KernSmooth")
library(MASS)
library(KernSmooth)
data("geyser")
hist(geyser$waiting, geyser$duration, xlab = "waiting", ylab ="duration",
main="geyser")
data(geyser)
windows(height=4, width = 9); par(mfrow=c(1,2))
plot(geyser$waiting, geyser$duration, xlab = "waiting", ylab ="duration",
main="geyser")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0:6,5),
pch=20, xlab = "waiting", ylab ="duration", main="geyser")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="forestgreen",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
windows(height=4, width = 9); par(mfrow=c(1,2))
plot(geyser$waiting, geyser$duration, xlab = "waiting", ylab ="duration",
main="geyser")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="forestgreen",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
savePlot("scatterplot.png", type="png")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="mint",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="lightpink",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
windows(height=4, width = 9); par(mfrow=c(1,2))
plot(geyser$waiting, geyser$duration, xlab = "waiting", ylab ="duration",
main="geyser")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="pink",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
#------------------------------------------------
density <- bkde2D(geyser, bandwidth = c(5,0.5))
par(new=T); contour(density$x1, density$x2,
density$fhat, xlim=c(30,120),ylim=c(0,6.5),
col=heat.colors(7)[7:1],
nlevels = 7, lwd=2)
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="forestgreen",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
windows(height=4, width = 9); par(mfrow=c(1,2))
plot(geyser$waiting, geyser$duration, xlab = "waiting", ylab ="duration",
main="geyser")
plot(geyser$waiting, geyser$duration, xlim=c(30,120), ylim=c(0,6.5),
col="forestgreen",pch=20, xlab = "waiting", ylab ="duration", main="geyser")
savePlot("scatterplot.png", type="png")
#------------------------------------------------
density <- bkde2D(geyser, bandwidth = c(5,0.5))
par(new=T); contour(density$x1, density$x2,
density$fhat, xlim=c(30,120),ylim=c(0,6.5),
col=heat.colors(7)[7:1],
nlevels = 7, lwd=2)
#회귀모형************************************************************
data(Cars)
windows(height=4, width = 9); par(mfrow=c(1,2))
windows(height=4, width = 9); par(mfrow=c(1,1))
plot(dist~speed, data=cars, main="cars",xlim=c(0,30), ylim=c(-10,120))
linear.reg <- lm(dist~speed, data=cars)
abline(linear.reg, col="red", lty="dotted")
plot(dist~speed, data=cars, main="cars",xlim=c(0,30), ylim=c(-10,120))
lowess.reg<- lowess(cars)
lines(lowess.reg, col="red")
(d<- data.frame(a=1:3, b=4:6, c=7:9))
d[, names(d)%in% c("b","c")]
d[, !names(d) %in% c("a")]
d<- data.frame(x=1:1000)
(d<- data.frame(a=1:3, b=4:6, c=7:9))
d[, names(d)%in% c("b","c")] #주어진 값이 벡터에 존재하는지를 판별하는 연산자
d[, !names(d) %in% c("a")] #!를 사용하여 특정 컬럼들 제외하여 반환
class(c(1,2))
str(c(1,2))
#조건부 플랏***************************************
rm(list = ls())
install.packages("lattice")
library(lattice)
data(quakes)
View(quakes)
xyplot(lat~long|depth, data= quakes)
depth.grp<- equal.count(quakes$depth, number=4, overlap=0)
xyplot(lat~long|depth, data= quakes)
depth.grp<- equal.count(quakes$depth, number=4)
xyplot(lat~long|depth.grp, data= quakes)
prop<- c(47,23,18,11,1)
p.vec <-rep(1:m, prop)
prop<- c(47,23,18,11,1)
type<- "systematic"
m<-length(prop)
p.vec <-rep(1:m, prop)
if (type=="random") p.vec <- sample(p.vec)
P <- matrix(p.vec, 10, 10)
color <- 2:(m+1)
windows(height=5, width=4.5); par(oma=c(0,0,1,1))
image(P, col=color, axes=F, main="proportions")
abline(h=seq(-0.05,1.05,1.1/10),col="white", lwd=4)
abline(v=seq(-0.05,1.05,1.1/10),col="white", lwd=4)
savePlot("square tiles_1.png", type="png")
#모자이크 그림***********************************************
rm(list=ls())
data(UCBAdmissions)
str(UCBAdmissions)
View(UCBAdmissions)
require(graphics)
windows(height=4, width=8); par(mfrow=c(1,2))
mosaicplot(~Dept+Gender+Admit, data=UCBAdmissions,
color=c("red","grey"), dir=c("v","v","h"),
off=1, main= "UC Berkeley Admissions")
savePlot("berkeley_2.png", type="png")
require(graphics) #library와 같은 기능
windows(height=4, width=8); par(mfrow=c(1,2))
mosaicplot(apply(UCBAdmissions, c(2,1), sum),
color=c("red","grey"),
main= "UC Berkeley Admissions")
mosaicplot(~Dept+Gender+Admit, data=UCBAdmissions,
color=c("red","grey"), dir=c("v","v","h"),
off=1, main= "UC Berkeley Admissions")
savePlot("berkeley_2.png", type="png")
install.packages("KoNLP")
install.packages("wordcloud")
library(KoNLP)
library(wordcloud)
install.packages("KoNLP")
install.packages("wordcloud")
install.packages("wordcloud")
library(KoNLP)
install.packages("KoNLP")
library(KoNLP)
library(wordcloud)
rm(list = ls())
install.packages("ggplot2")
require(ggplot2)
install.packages("gcookbook")
require(gcookbook)
View(cabbage_exp)
ggplot(cabbage_exp, aes(x=Date, y=Weight, fill=Cultivar)) + #데이터/변수 할당
geom_bar(stat= 'identity', position ='fill', colour='black')+#막대그래프
scale_fill_brewer(palette='Pastel1') +#색깔바꾸기
coord_flip() #x축과 y축 바꾸기
data(cars)
View(cars)
install.packages("car")
library(car)
data(Salaries)
View(Salaries)
install.packages("carData")
install.packages("carData")
library(carData)
data(Salaries)
View(Salaries)
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("ggplot2")
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
require(ggplot2)
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
p <-ggplot(aes(x=yrs.service, y=salary), data=Salaries)
p+geom_blank()
p+geom_point()
p+ geom_point(aes(colour=sex)) + geom_smooth()
p+ geom_point(aes(colour=sex)) + geom_smooth() + facet_grid(~sex)
#ggplot2
rm(list = ls())
library(carData)
data(Salaries)
ggplot(Salaries, aes(x=salary, y=..density..))+
geom_histogram(colour='grey60', fill='cornsilk')+
geom_density(colour=NA, fill='blue', alpha=0.2)+
geom_line(stat='density', colour='red')+
xlim(45000,250000)
install.packages("ggthemes")
library(ggthemes) #theme_few()적용을 위해
ggplot(Salaries, aes(x=yrs.since.phd, y= salary, fill=sex))+ #데이터 및 변수 할당
geom_smooth(method=lm, formula = y~poly(x,2)) + #회귀선 추가
geom_point(shape=21)+ #점그래프
facet_grid(.~sex)+ #새로운 면 분할
theme_few()+
scale_colour_few() #테마에 있는 배색 적용
ggplot(Salaries, aes(x=yrs.since.phd, y= salary, fill=sex))+ #데이터 및 변수 할당
geom_smooth(method=lm, formula = y~poly(x,2)) + #회귀선 추가
geom_point(shape=21)+ #점그래프
facet_grid(.~sex)+ #새로운 면 분할
theme_economist()+
scale_colour_few() #테마에 있는 배색 적용
data(mtcars)
View(mtcars)
ggplot(mtcars, aes(x=disp, y=mpg), xlim=c(50,600))
ggplot(mtcars, aes(x=disp, y=mpg, fill=gear), xlim=c(50,600))
ggplot(mtcars, aes(x=disp, y=mpg, fill=gear))+
geom_point(shape=21)+ xlim=c(50,600)
ggplot(mtcars, aes(x=disp, y=mpg, fill=gear))+
geom_point(shape=21)
ggplot(mtcars, aes(x=disp, y=mpg, fill=gear))+
geom_point(shape=21)+
xlim(50,600)
ggplot(mtcars, aes(x=disp, y=mpg, fill=gear))+
geom_point(shape=21)+
theme_economist_white()+
scale_colour_economist()+
xlim(50,600)
windows(height=4, width = 8)
ggplot(Salaries, aes(x=yrs.since.phd, y= salary, fill=sex))+ #데이터 및 변수 할당
geom_smooth(method=lm, formula = y~poly(x,2)) + #회귀선 추가
geom_point(shape=21)+ #점그래프
facet_grid(.~sex)+ #새로운 면 분할
theme_economist()+
scale_colour_few() #테마에 있는 배색 적용
ggplot(mtcars, aes(x=disp, y=mpg, fill=gear))+
geom_point(shape=21)+
facet_grid(.~gear)+
theme_economist_white()+
scale_colour_economist()+
xlim(50,600)
#example
mtcars$cyl=factor(mtcars$cyl)
ggplot(mtcars, aes(x=disp, y=mpg, colour=cyl))+
geom_text(aes(label=rownames(mtcars),x=disp+5), hjust=0)+
geom_point()+xlom(50,600)
ggplot(mtcars, aes(x=disp, y=mpg, colour=cyl))+
geom_text(aes(label=rownames(mtcars),x=disp+5), hjust=0)+
geom_point()+xlim(50,600)
library(MASS)
library(ggplot2)
data(geyser)
summary(geyser)
str(geyser)
ggplot(geyger, aes(x=waiting, y=durarion))+
geom_point()
data(geyser)
ggplot(geyser, aes(x=waiting, y=durarion))+
geom_point()
ggplot(geyser, aes(x=waiting, y=durtion))+
geom_point()
ggplot(geyser, aes(x=waiting, y=duration))+
geom_point()
#시계열분석****************************************
data(countries)
library(gcookbook)
library(ggplot2)
data(countries)
force(countries)
View(countries)
str(countries)
data(diamonds)
str(diamonds)
View(diamonds)
ggplot(data=diamonds, aes(x=carat,y=price))+
geom_point(aes(colour=clarity))
rm(list = ls())
library(reshape)
library(ggplot2)
conn<- read.table("conn.txt", header = T)
str(conn) #송유관 재질 3종
windows(height=5.5, width=7)
plot(castiron~year, type="l", data=conn,
ylab="m.miles", lwd=2, col="brown1", ylim=c(0,1000000))
text(2010, 100000, "cast.iron" col="brown1")
par(new=T)
text(2010, 100000, "cast iron" col="brown1")
text(2010, 100000, "cast iron", col="brown1")
par(new=T)
plot(steel~year, type="l", data=conn, lwd=2, ylab="m.miles",
col="green3", ylim=c(0,1000000))
text(2010,500000, "steel", col="green3")
par(new=T)
plot(plastic~year, type="l", data=conn, lwd=2, ylab="m.miles",
col="blue", ylim=c(0,1000000))
text(2010,720000,"plastic", col="blue")
title("Pipeline Materials by Year")
View(conn)
reshape(data = conn, varying = c("castiron","steel","plastic"),
v.names="mmiles", timevar = "material",
times=c("castiron", "steel","plastic"),
direction = "long")
data<- subset(data, select=-c(id))
data<- subset(conn, select=-c(id))
reshape(conn, varying = c("castiron","steel","plastic"),
v.names="mmiles", timevar = "material",
times=c("castiron", "steel","plastic"),
direction = "long")
data<- subset(data, select=-c(id))
data<- reshape(conn, varying = c("castiron","steel","plastic"),
v.names="mmiles", timevar = "material",
times=c("castiron", "steel","plastic"),
direction = "long")
data<- subset(data, select=-c(id))
graph<- ggplot(data, aes(x=year, y=mmiles,fill=material))+
geom_area(position = 'stack')+
labs(x="Year", y="Total Miles of Pipeline in Millions")+
scale_fill_discrete(name="Material",
breaks = c("castiron","steel","plastic"),
labels=c("castiron","steel","plastic"))
plot(graph)
rm(list=ls())
install.packages("maps")
install.packages("mapproj")
library(map)
library(maps)
library(mapproj)
library(ggplot2)
data("USArrests")
data(USArrests)
force(USArrests)
View(USArrests)
crimes<- data.frame(state=tolower(rownames(USArrests)),USArrests)
states_map<- map_data("state")
head(states_map)
View(crimes)
View(states_map)
map_data(state)
ggplot(crimes)+
geom_map(aes(map_id=state, fill=Murder), map=states_map)+
expand_limits(x=states_map$long, y=states_map$lat)+
coord_map()
ggplot(crimes)+
geom_map(aes(map_id=state, fill=Murder), map=states_map)+
expand_limits(x=states_map$long, y=states_map$lat)+
col=heat.colors(18)[18:1]
ggplot(crimes)+
geom_map(aes(map_id=state, fill=Murder), map=states_map)+
expand_limits(x=states_map$long, y=states_map$lat)+
col=heat.colors(18)[18:1]+
coord_map()
ggplot(crimes)+
geom_map(aes(map_id=state, fill=Murder), map=states_map)+
expand_limits(x=states_map$long, y=states_map$lat)+
coord_map()
library(reshape2)
crimesm <-melt(crimes, id.vars="state")
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey60', size=0.1)
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey60', size=0.1)+
exapnd_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
coord_map()
library(reshape2)
crimesm <-melt(crimes, id.vars="state")
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey60', size=0.1)+
exapnd_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
coord_map()
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey60', size=0.1)+
exapnd_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
facet_wrap(~variable)+
coord_map()
library(maps)
library(mapproj)
library(ggplot2)
library(reshape2)
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey60', size=0.1)+
exapnd_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
facet_wrap(~variable)+
coord_map()
library(ggplot2)
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey60', size=0.1)+
expand_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
facet_wrap(~variable)+
coord_map()
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='goldenrod2', size=0.1)+
expand_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
facet_wrap(~variable)+
coord_map()
ggplot(crimesm)+
geom_map(aes(map_id=state, fill=value), map=states_map,
colour='grey50', size=0.1)+
expand_limits(x=states_map$long, y=states_map$lat) + #x,y 최소 최대가
scale_fill_gradientn(colours=c("white", "green","blue","red"))+
facet_wrap(~variable)+
coord_map()
